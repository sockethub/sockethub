<!doctype html>
<html>
  <head>
    <title>Sockethub Example Feed Reader</title>
    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
      form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }
    </style>
  </head>
  <body>
    <ul id="messages"></ul>
    <form action="">
      <input id="m" autocomplete="off" /><button>Send</button>
    </form>

    <script src="<%= address %>jquery.js"></script>
    <script src="<%= address %>sockethub/socket.io.js"></script>
    <script src="<%= address %>activity-streams.min.js"></script>
    <script src="<%= address %>sockethub-client.js"></script>
    <script>
      localStorage.debug = '<%= debug_scope %>';
      var sc = new SockethubClient(io('<%= address %>', { path: '/sockethub' }));

      // errors
      sc.socket.on('failure', function (msg) {
        console.log('received failure: ', msg);
      });

      sc.socket.on('completed', function (msg) {
        console.log('received completed event for: ', msg);
      });

      // handle incoming messages from the sockethub server
      sc.socket.on('message', function (msg) {
        console.log('received message: ', msg);
        if (Array.isArray(msg)) {
          for (var i = 0, len = msg.length; i < len; i++) {
            displayMessage(msg[i]);
          }
        } else {
          displayMessage(msg);
        }
      });

      function displayMessage(msg) {
        msg.actor = sc.ActivityStreams.Object.get(msg.actor);
        console.log('displaying message: ', msg);
        $('#messages').append($('<li>').text(msg.actor.displayName + ': ' + msg.object.title));
      }

      // handler for user input, emit messages to sockethub server
      $('form').submit(function () {
        var msg = {
          context: 'feeds',
          '@type': 'fetch',
          actor: 'https://sockethub.org/examples/feeds',
          object: {
            '@type': 'parameters'
          },
          target: {
            '@type': 'feed',
            '@id': $('#m').val()
          }
        };

        console.log('sending message: ', msg);
        sc.socket.emit('message', msg);
        $('#m').val('');
        return false;
      });

      // our feed actor info
      sc.ActivityStreams.Object.create({
        '@id': 'https://sockethub.org/examples/feeds',
        '@type': "website",
        displayName: "Sockethub Examples - Feeds"
      });
    </script>
  </body>
</html>
