<!doctype html>
<html>
  <head>
    <title>Sockethub Example Dummy</title>
    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
      form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }
    </style>
  </head>
  <body>
    <ul id="messages"></ul>
    <form action="">
      <input id="m" autocomplete="off" /><button>Send</button>
    </form>
    <script src="<%= address %>jquery.js"></script>
    <script src="<%= address %>socket.io.js"></script>
    <script src="<%= address %>sockethub-client.js"></script>
    <script src="<%= address %>examples/shared.js"></script>
    <script>
      bdebug = function (msg, obj) { console.log(msg, obj); };
      localStorage.debug = 'sockethub:*';
      const sc = new SockethubClient(io('<%= address %>', { path: '/sockethub' }));

      // our user info
      sc.ActivityStreams.Object.create({
        id: 'https://sockethub.org/examples/dummyUser',
        type: "person",
        name: "Sockethub Examples - Dummy User"
      });

      // errors
      sc.socket.on('failure', function (msg) {
        bdebug('received failure: ', msg);
      });

      function displayMessage(msg) {
        msg.actor = sc.ActivityStreams.Object.get(msg.actor);
        bdebug('displaying message: ', msg);
        $('#messages').append($('<li>').text(msg.actor.name + ': ' + msg.object.title));
      }

      // handle incoming messages from the Sockethub server
      sc.socket.on('message', function (msg) {
        bdebug('received message: ', msg);
        if (Array.isArray(msg)) {
          bdebug('is array len:' + msg.length);
          for (let i = 0, len = msg.length; i < len; i++) {
            bdebug('looping '+i+' ', msg[i]);
            displayMessage(msg[i]);
          }
        } else {
          displayMessage(msg);
        }
      });

      // handler for user input, emit messages to Sockethub server
      $('form').submit(function () {
        let [type, text] = $('#m').val().split(':');
        if (! text) {
          text = type;
          type = 'echo';
        } else {

        }
        const msg = {
          context: 'dummy',
          type: type,
          actor: 'https://sockethub.org/examples/dummyUser',
          object: {
            type: 'message',
            content: text
          }
        };
        bdebug('sending message: ', msg);
        sc.socket.emit('message', msg, (d) => {
          bdebug('completed', d)
          $('#messages').append($('<li>').text(
                  `${d.type} received from ${d.actor.id} ${d.actor.type}: ` + d.object.content));
        });

        $('#m').val('');
        return false;
      });
    </script>
  </body>
</html>
